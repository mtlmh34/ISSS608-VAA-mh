[
  {
    "objectID": "inclass_1/inclass_1.html",
    "href": "inclass_1/inclass_1.html",
    "title": "In-Class Exercise 1",
    "section": "",
    "text": "1. Overview\nThe outcomes of the exercise are shown as a dashboard on Tableau Public."
  },
  {
    "objectID": "handson_1/handson_1.html#getting-started",
    "href": "handson_1/handson_1.html#getting-started",
    "title": "Hands-on Exercise 1: ggplot using R",
    "section": "Getting Started",
    "text": "Getting Started\n\nImport libraries & read sample data\n\nlibrary(ggplot2)\nlibrary(tidyverse)\n\n\n\nLoad Data\n\nd <- read.csv('/Users/minghaooo/Documents/Term 4/ISSS608-Visual Analytics/inclass-1/Exam_data.csv')\n\n\n\nPlot the average maths results of each class\n\noptions(repr.plot.width = 5, repr.plot.height =2)\nggplot(d, aes(x=CLASS, y=MATHS),height = 10 , width = 50) + geom_bar(stat = \"summary\",fun = \"mean\")\n\n\n\n\n\n\nWorking with facet\n\n# Facet by rows\nggplot(d, aes(x=CLASS, y=MATHS)) + geom_boxplot()+facet_grid(rows=vars(GENDER))\n\n\n\n#Facet by columns\nggplot(d, aes(x=CLASS, y=MATHS)) + geom_boxplot()+facet_grid(cols=vars(GENDER))\n\n\n\n#Facet Grid: rows + columns\nggplot(d, aes(x=GENDER, y=MATHS)) + geom_boxplot()+facet_grid(rows=vars(GENDER), cols=vars(CLASS))\n\n\n\n\n\n\nWorking with theme\n\nggplot(data=d, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()+\n  theme(panel.background = element_rect(fill = \"lightblue\",colour = \"white\"),\n        panel.grid.major = element_line(size = 0.5, linetype = 'solid',colour = \"white\"), \n        panel.grid.minor = element_line(size = 0.25, linetype = 'solid',colour = \"white\")\n        )\n\nWarning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\n\n\n\n\n\n\nThe makeover design 1\n\nArrange bar charts in descending order\n\n\nd %>%\n  mutate(RACE = fct_infreq(RACE)) %>%\n  ggplot(aes(x=RACE)) + \n  geom_bar()+ \n  ylab('No. of Pupils')+\n  theme(axis.title.y=element_text(angle=0))+\n  geom_text(stat = 'count', \n            aes(label = paste(..count..,', ',round(..count../dim(d)[1]*100,digits=1), '%')),\n            vjust = -0.5,\n            size=3\n            )\n\nWarning: The dot-dot notation (`..count..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(count)` instead.\n\n\n\n\n\n\n\nThe makeover design 2\n\nAdding mean and median lines on the histogram plot\nChange fill color and line color\n\n\nggplot(data = d,\n       aes(x=MATHS))+\n  geom_histogram(bins = 20,\n                 color = \"black\",\n                 fill = \"light blue\") +\n  geom_vline(xintercept = mean(d$MATHS),\n             color = \"red\",\n             linetype = \"longdash\") +\n  annotate(\"text\",x=mean(d$MATHS)-1,y=55, label=\"mean\",color='red') +\n  geom_vline(xintercept = median(d$MATHS),\n             color = \"black\",\n             linetype = \"longdash\")+\n  annotate(\"text\",x=median(d$MATHS)-1,y=50, label=\"median\")\n\n\n\n\n\n\nThe makeover design 3\n\nThe background histograms show the distribution of English scores for all pupils\n\n\n# duplicate a new dataset without gender\nno_gender <- subset(d, select=-c(GENDER))\n\n#fill diff. colour by gender\nggplot(d, aes(x=ENGLISH,fill=GENDER))+\n  #plot background using duplicate dataset\n  geom_histogram(data = no_gender, fill = \"grey\",binwidth = 2.5,alpha = 0.5)+\n  #plot foreground\n  geom_histogram(binwidth = 2.5, color = \"black\")+\n  #facet by gender\n  facet_wrap(~GENDER)\n\n\n\n\n\n\nThe makeover design 4\n\nA within group scatterplot with reference lines\n\n\nggplot(data=d,\n       aes(x = MATHS,y=ENGLISH)) +\n  geom_point()+\n  xlim(0,100)+\n  ylim(0,100)+\n  geom_vline(xintercept = 50, alpha=.5, linetype = \"longdash\") +\n  geom_hline(yintercept = 50, alpha=.5, linetype = \"longdash\")"
  },
  {
    "objectID": "takehome_2/takehome_2.html",
    "href": "takehome_2/takehome_2.html",
    "title": "Take-Home Exercise 2",
    "section": "",
    "text": "This take-home exercise is done based on a take-home exercise 1 submission prepared by a classmate. The peer submission will be critiqued in terms of clarity and aesthetics, and the original design will be remade using the data visualization principles and best practice learnt in Lesson 1 and 2.\nThe dataset used in take-home exercise 1 and 2 is downloaded from SingStat, and processed by RStudio tidyverse family of packages and visualized by ggplot2 and its extensions."
  },
  {
    "objectID": "takehome_2/takehome_2.html#import-necessary-packages",
    "href": "takehome_2/takehome_2.html#import-necessary-packages",
    "title": "Take-Home Exercise 2",
    "section": "2.1. Import necessary packages",
    "text": "2.1. Import necessary packages\nBefore we get started, it is important for us to ensure that the required R packages have been installed.\nR package pacman is used to load all required packages, and install them automatically if the packages are not installed. The code chunk below is used to install and load the required packages onto RStudio.\n\npacman::p_load(dplyr,tidyverse,ggplot2,patchwork)"
  },
  {
    "objectID": "takehome_2/takehome_2.html#import-data",
    "href": "takehome_2/takehome_2.html#import-data",
    "title": "Take-Home Exercise 2",
    "section": "2.2. Import data",
    "text": "2.2. Import data\n\n# read csv file\nresidents <- read_csv('../Data/residents_by_area.csv')\n\nRows: 75696 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, FA\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "takehome_2/takehome_2.html#the-original-visualization",
    "href": "takehome_2/takehome_2.html#the-original-visualization",
    "title": "Take-Home Exercise 2",
    "section": "3.1. The original visualization",
    "text": "3.1. The original visualization\nThe original visualization prepared by our classmate shows a trellis plot containing age-sex pyramids of 9 different areas in SG using Tableau Desktop; in each grid, the right-hand side displays male population and the left-hand side displays female population, binned by age groups.\n\n\n\nThe original dashboard by one of the classmates"
  },
  {
    "objectID": "takehome_2/takehome_2.html#critic-clarity",
    "href": "takehome_2/takehome_2.html#critic-clarity",
    "title": "Take-Home Exercise 2",
    "section": "3.2. Critic: Clarity",
    "text": "3.2. Critic: Clarity\n\nContrast colours are used for male and female population, which gives clear disinction.\nAbsolute value of population is used in the visualization; as different areas have different population sizes, it is difficult to compare the age structure against each other.\nValue of every bar is shown in the graph, which can be distracting for the audience.\nTo give a clearer comparison to the overall population, each of the grid in the trellis can be overlay-ed on the age-sex pyramid of SG’s total population."
  },
  {
    "objectID": "takehome_2/takehome_2.html#critic-aesthetic",
    "href": "takehome_2/takehome_2.html#critic-aesthetic",
    "title": "Take-Home Exercise 2",
    "section": "3.3. Critic: Aesthetic",
    "text": "3.3. Critic: Aesthetic\n\nThe axes and titles are nicely labelled.\nInstruction is stated above the checkboxs clearly, allowing users to change areas to be displayed."
  },
  {
    "objectID": "takehome_2/takehome_2.html#sketch-of-propose-design",
    "href": "takehome_2/takehome_2.html#sketch-of-propose-design",
    "title": "Take-Home Exercise 2",
    "section": "3.4. Sketch of Propose Design",
    "text": "3.4. Sketch of Propose Design\nThe proposed design is meant to keep the advantages of the original design, and mainly improve on clarity, so that more informative visualization can be produced.\nBelow is the sketch of the makeover design.\n\n\n\nSketch of makeover"
  },
  {
    "objectID": "takehome_2/takehome_2.html#visualization-makeover-using-r",
    "href": "takehome_2/takehome_2.html#visualization-makeover-using-r",
    "title": "Take-Home Exercise 2",
    "section": "3.5. Visualization Makeover using R",
    "text": "3.5. Visualization Makeover using R\n\nProducing the background\nFirstly, compute sum of population by sex and age groups.\n\nSG_pop <- sum(residents$Pop)\n\nres_total <- residents %>%\n  group_by(Sex,AG) %>%\n  summarise(total_pop=sum(Pop))%>%\n  #PopPerc, if female -> positive, if male -> negative\n  mutate(PopPerc=case_when(Sex=='Females'~round(total_pop / SG_pop, 4), \n                                       TRUE~-round(total_pop / SG_pop, 4)), \n                                       signal=case_when(Sex=='Females'~1,TRUE~-1))\n\n`summarise()` has grouped output by 'Sex'. You can override using the `.groups`\nargument.\n\n#set age group level\nres_total$AG <- str_replace_all(res_total$AG,'_',' ')\nres_total$AG <- factor(res_total$AG, levels = unique(str_replace_all(residents$AG,'_',' ')), ordered=TRUE)\n#levels(res_total$AG)\n#head(res_total)\n\nPlotting of overall population. The object total_pop_plot will be used for background of plots of each of the areas. Notice that x-axis shows the percentage of population by age group and sex over total SG population.\n\ntotal_pop_plot <- ggplot(res_total) + \n  geom_bar(aes(x=AG,y=PopPerc), stat = 'identity', \n           fill = \"grey\",alpha=0.6) + \n  coord_flip()\ntotal_pop_plot\n\n\n\n\n\n\nProduce per area plot\nNext, aggregate population by Planning Areas, Sex and Age Group.\n\nres_by_area <- residents %>%\n  group_by(PA, Sex, AG) %>%\n  summarise(total_pop=sum(Pop))\n\n`summarise()` has grouped output by 'PA', 'Sex'. You can override using the\n`.groups` argument.\n\n#set age group level\nres_by_area$AG <- str_replace_all(res_by_area$AG,'_',' ')\n# order age group properly\nres_by_area$AG <- factor(res_by_area$AG, levels = unique(str_replace_all(residents$AG,'_',' ')), ordered=TRUE)\n# levels after assigning order\nlevels(res_by_area$AG)\n\n [1] \"0 to 4\"      \"5 to 9\"      \"10 to 14\"    \"15 to 19\"    \"20 to 24\"   \n [6] \"25 to 29\"    \"30 to 34\"    \"35 to 39\"    \"40 to 44\"    \"45 to 49\"   \n[11] \"50 to 54\"    \"55 to 59\"    \"60 to 64\"    \"65 to 69\"    \"70 to 74\"   \n[16] \"75 to 79\"    \"80 to 84\"    \"85 to 89\"    \"90 and over\"\n\n#res_by_area\n\nDefine function that plot for one area, so that codes can be re-usable by inputing different area names as parameters.\n\nplot_one_area <- function(area){\n  # area name as parameter\n  area_data <- subset(res_by_area, PA==area)\n  #compute total population\n  area_population <- sum(area_data$total_pop)\n  #compute population% by sex & AG over total population in the area\n  #use case_when to split male and female population to different size, by using +/- numbers\n  area_data <- mutate(area_data,PopPerc=case_when(Sex=='Females'~round(total_pop / area_population, 4), \n                                       TRUE~-round(total_pop / area_population, 4)), \n                                       signal=case_when(Sex=='Females'~1,TRUE~-1))\n  #compute female% and male%\n  malePop <- sum((subset(area_data, Sex=='Males')$total_pop))\n  femalePop <- sum((subset(area_data, Sex=='Females')$total_pop))\n  malePerc <- round(malePop/(malePop+femalePop)*100,1)\n  femalePerc <- round(femalePop/(malePop+femalePop)*100,1)\n  \n  #sex-age pyramid of one area\n  p <- ggplot(area_data) + \n    geom_bar(aes(x=AG,y=PopPerc,fill = Sex), \n             stat = 'identity', alpha=0.6) +\n    scale_fill_manual(values=c(\"red\",\"darkblue\")) +\n    geom_bar(data=res_total, aes(x=AG,y=PopPerc), stat = 'identity', \n           fill = \"grey\",color = \"grey\", alpha=0.3) + \n    coord_flip() +\n    labs(x='Age Group', y= 'Population% within area',size=6) +\n    #change the negative labels to positive, and annotate with percentage sign\n    scale_y_continuous(breaks = c(-0.05, -0.025,0, 0.025,0.05), labels = c('5%','2.5%','0', '2.5%','5%')) +\n    #label male:female ratio to give additional information in the area\n    geom_text(size=3,\n              aes(18,0.035,label=paste(\"Female: \", femalePerc, '%', '\\n','Male:', malePerc, '%')),\n              colour = 'black',alpha=0.5)\n    #return the plot\n  return(p)\n}\n\n\n\nCombine Plots of 9 Areas\nFinally, combine the background and foreground using Patchwork package, and annotate title and subtitle. The codes and final meke-over visualization is shown as follows:\n\n#define the 9 selected areas\nareas <- c('Bedok', 'Choa Chu Kang', 'Hougang', \n           'Jurong West', 'Punggol', 'Sengkang', \n           'Tampines', 'Woodlands', 'Yishun')\n#initialize new list\ngraphs=list()\n#combine the 9 plots\ncombined <- (plot_one_area(areas[1])+plot_one_area(areas[2])+plot_one_area(areas[3]))/(plot_one_area(areas[4])+plot_one_area(areas[5])+plot_one_area(areas[6]))/(plot_one_area(areas[7])+plot_one_area(areas[8])+plot_one_area(areas[9]))\n\n#produce the final plot\nfinal <- combined + \n  plot_annotation(title = 'Age-sex Pyramid of 9 most densely populated area, June 2022',\n                  subtitle = 'Light-Grey Area Represents Age-sex Pyramid of SG Total Population',\n                  tag_levels = list(areas),\n                  theme = theme(plot.title = element_text(size = 30, hjust = 0.5),\n                                plot.subtitle = element_text(size = 20, hjust = 0.5)),\n                  caption = 'Data Source: SingStat') + \n  theme(axis.text=element_text(size=6),\n        axis.title=element_text(size=12,face=\"bold\",hjust = 0.5)) +\n  plot_layout(ncol = 1, guides = \"collect\")\nfinal\n\n\n\n\n\n\nAdvantages of Makeover design\nCompared to the original design, the makeover design has the following advantages:\n\nit hides unnecessary details by hiding values for every bar.\nit shows the population% of each area, overlayed by SG total population% (instead of using absolute values); hence, we can do “apple-to-apple” comparisons accross different areas without being distracted by different population sizes.\nit provides addidtional infomation by annotating male-to-female ratio of different areas.\nit keeps the good sides of the original design, in terms of asthetic and clarity."
  },
  {
    "objectID": "takehome_3/takehome_3.html",
    "href": "takehome_3/takehome_3.html",
    "title": "Take-home Exercise 3",
    "section": "",
    "text": "This take-home exercise aims to reveal the salient patterns of the resale prices of public housing properties by residential towns and estates in Singapore.\nThe dataset used in take-home exercise 3 is downloaded from Data.gov.sg, and processed by RStudio tidyverse family of packages and visualized by ggplot2 and its extensions.\n\n\nUsing pacman package to load visualization packages.\n\npacman::p_load(dplyr, tidyverse, DT, ggplot2, ggiraph, \n               ggstatsplot, patchwork, plotly, gganimate, \n               ggthemes, corrplot, heatmaply)\n\n\n\n\nPreviewing the head rows of the data to observe the columns.\n\nresale_data <- read_csv(\"../Data/resale-flat-prices-based-on-registration-date-from-jan-2017-onwards.csv\")\n\noptions(DT.options = list(pageLength = 5))\nDT::datatable(head(resale_data,20),class =\"cell-border stripe\",style = \"bootstrap\") \n\n\n\n\n\n#%>% formatStyle(names(resale_data),backgroundColor = 'grey')\n\n\n\n\nFor this study, we are interested in the 3-ROOM, 4-ROOM and 5-ROOM flats that are sold during the year of 2022 (except using data of 2017-2023 for trend analysis).\n\nunique(resale_data$flat_type)\n\n[1] \"2 ROOM\"           \"3 ROOM\"           \"4 ROOM\"           \"5 ROOM\"          \n[5] \"EXECUTIVE\"        \"1 ROOM\"           \"MULTI-GENERATION\"\n\n\nFirst, we transform the data by extracting year and month from column month, and calculating the remaining lease years and price per square meter, using the tidyverse library.\n\nresale_345 <- resale_data %>% \n  # and 3/4/5 ROOM in flat_type column\n  filter(str_detect(flat_type, '3 ROOM|4 ROOM|5 ROOM')) %>%\n  # extract the year of sale\n  mutate(sale_year=as.integer(str_sub(month, start = 1L, end = 4L))) %>%\n  # extract the month of sale\n  mutate(sale_month=as.integer(str_sub(month, start = 6L, end = -1L))) %>%\n  # extract the remaining lease in years\n  mutate(remaining_lease_years=as.integer(str_sub(remaining_lease, start = 1L, end = 2L))) %>%\n  # calculate the price/sqm\n  mutate(psqm=round(resale_price / floor_area_sqm, 2))\n\nDT::datatable(head(resale_345,100),class =\"cell-border stripe\",style = \"bootstrap\") %>%\nDT::formatStyle(columns = colnames(.), fontSize = '20%')"
  },
  {
    "objectID": "takehome_3/takehome_3.html#timely-trend-from-2017---2023",
    "href": "takehome_3/takehome_3.html#timely-trend-from-2017---2023",
    "title": "Take-home Exercise 3",
    "section": "2.1. Timely Trend (From 2017 - 2023)",
    "text": "2.1. Timely Trend (From 2017 - 2023)\n\n2.1.1. Timely Trend of Price Per Sqm. by Flat Type\n\ngrp2 <- resale_345 %>%\n  group_by(sale_year, flat_type) %>%\n  summarise(no_sales=n(), avg_psqm=round(mean(psqm),2))\n\n\ntt <- c(paste(\"Year:\", grp2$sale_year, \"<br>Price/SQM: $\", grp2$avg_psqm))\n\nfig2 <-grp2 %>%\n  ggplot(aes(x = sale_year, y = avg_psqm,colour = flat_type)) +\n  geom_smooth(alpha = 0.1,se=FALSE) +\n  geom_point_interactive(aes(tooltip = tt),size = 5) +\n  theme_excel_new()+\n  scale_x_continuous(breaks = seq(2017,2023,by = 1),limits = c(2017,2023)) +\n  scale_y_continuous(breaks = seq(0,6500,by = 1000),limits = c(4000,6500)) +\n  labs(title = \"Avg. Resale Unit Price, 2017 - 2023\", x = 'Year', y = 'Avg. Resale Price') +\n  scale_color_manual(values = c(\"#3d7dcc\", \"#f57ee0\", \"#02e302\")) \n\ngirafe(\n  ggobj = fig2, width_svg = 12\n)\n\n\n\n\n\nConsideration: lineplot is chosen for clearer observation of the change in average unit price. For more obvious illustration of the trend, the data was grouped by year instead of month. When user hover on the data points, the corresponding unit price of the specific flat type in that year will be displayed.\nAnalytical insights: from the visualization, we found out:\n\nBefore 2020, the unit resale price in Singapore is fairly stable, fluctuating around SGD 4,500.\nAfter 2020, the average unit price increased rapidly year by year; this may be affected by the short in labour force due to COVID-19 and the increased demand.\n\n\n\n2.1.2. Timely Trend of No. of Sales\n\n# Group by month and flt type\ngrp <- resale_345 %>%\n  group_by(month, flat_type) %>%\n  summarise(no_sales=n(), avg_psqm=round(mean(psqm),2))\n\n# Minimal point of No. of sales\nm <- grp[which.min(grp$no_sales), ]\na <- list(\n  x = m$month,\n  y = m$no_sales,\n  text = 'Circuit Breaker Period',\n  xref = \"x\",\n  yref = \"y\",\n  showarrow = TRUE,\n  arrowhead = 7,\n  ax = -100,\n  ay = -30\n)\n\n# Use Plotly to draw line chart by flat type\nfig <- grp %>%\n  ungroup() %>%\n  plot_ly(x = ~month, \n          y = ~no_sales, \n          color= ~flat_type,\n          text = ~paste(\"month:\", month, \"<br>Sales:\", no_sales),\n          type = 'scatter', \n          mode = 'lines') %>%\n  layout(title = list(text = 'Total No. of Sales of 3/4/5 Room Flats, 2017 - 2022',\n                      pad = list(b = 90, l = 130, r = 50 )\n                      ),\n         xaxis = list(title = 'MONTH',\n                      zeroline = TRUE),\n         yaxis = list(title = 'NO. OF SALES')\n         )\n# Add min point annotation\nfig <- fig %>% add_markers()\nfig <- fig %>% layout(annotations = a)\n\nfig\n\n\n\n\n\nConsideration: lineplot is chosen for clearer observation of the sales volume fluctuation. Different room types are represented by different colors of lines in the chart. As for interactability, when user hover on a particular data point, year and month and the respective sales volume will be displayed.\nAnalytical insights: from the visualization, we found out:\n\n4-ROOM flats are the most popular flat type across the whole period, whereas the sales volume of 5-ROOM flats has been slightly higher than that of 3-ROOM flats most of the time.\nThere is a noticable drop in sales volume during April & May 2020; this was probably due to the circuit breaker policy during COVID-19 spread in Singapore.\n\n\n\n2.1.3. Timely Trend of Price Per Sqm. by Area\n\nmeans=resale_345 %>% group_by(town) %>% summarise(mpsqm=mean(psqm))\nmeans\n\n# A tibble: 26 × 2\n   town          mpsqm\n   <chr>         <dbl>\n 1 ANG MO KIO    4997.\n 2 BEDOK         4823.\n 3 BISHAN        6070.\n 4 BUKIT BATOK   4400.\n 5 BUKIT MERAH   6676.\n 6 BUKIT PANJANG 4491.\n 7 BUKIT TIMAH   6450.\n 8 CENTRAL AREA  7850.\n 9 CHOA CHU KANG 4158.\n10 CLEMENTI      5885.\n# … with 16 more rows\n\n\n\n# Calculate the mean psqm for each town and year combination\nmeans <- resale_345 %>% \n  group_by(town, sale_year) %>% \n  summarise(mpsqm = mean(psqm))\n\np <- ggplot(resale_345, aes(x = psqm, color = factor(town), fill = factor(town))) + \n  geom_density(aes(frame=resale_345$sale_year)) +\n  facet_grid(town~., scales = \"free\", space = \"free\") +\n  geom_vline(data = means, aes(xintercept = mpsqm, frame=sale_year), alpha=0.4) +\n  theme_bw() +\n  theme(\n    legend.position = \"none\",\n    plot.margin = margin(1, 3, 0, 0, \"cm\"),\n    panel.grid = element_blank(),\n    panel.background = element_blank(),\n    axis.text = element_blank(),\n    strip.text.y = element_text(angle = 0,margin = margin(2,2,2,2, \"cm\")),\n    panel.spacing = unit(0, \"cm\", data = NULL)\n  )+xlab('Price Per Sqm. (SGD)')\n\nfig3 <- ggplotly(p) %>% layout(title=\"Price Per Sqm. Distribution by Town\") \n\nfig3 <- fig3 %>% \n  animation_opts(\n  1200, easing = \"linear\", redraw = FALSE,\n  ) %>%\n  animation_slider(\n    currentvalue = list(prefix = \"YEAR \", font = list(color=\"black\"))\n  )\n\nfig3\n\n\n\n\n\nConsideration: density plot of unit price distribution is chosen for comparision between different towns, and a vertical line indicates the median of the unit price in that area. User can also drag the slider bar mannually or press the “Play” button to see how the unit prices in different areas change over the years.\nAnalytical insights: here are the findings from the visualization:\n\nWe can observe that towns such as Bukit Timah, Central Area and Queenstown have more left-skewed distributions, indicating these are more expensive areas;\nAreas like Woodlands, Yishun and Choa Chu Kang are more affordable ones.\nMoreover, using plotly, we can see how the medians “run” to the right-hand side since 2020 onwards!"
  },
  {
    "objectID": "takehome_3/takehome_3.html#statistical-visualization-in-2022",
    "href": "takehome_3/takehome_3.html#statistical-visualization-in-2022",
    "title": "Take-home Exercise 3",
    "section": "2.2. Statistical Visualization (In 2022)",
    "text": "2.2. Statistical Visualization (In 2022)\n\n2.2.1. One-way ANOVA Test on Median of Price Per Sqm. (Non-parametric)\n\n#filter only 2022 data\nresale_2022 <- resale_345 %>%filter(sale_year==2022)\n\nanova <- ggbetweenstats(\n  data = resale_2022,\n  x = flat_type,\n  y = psqm,\n  type = \"np\",                   #non-parametric test\n  mean.ci = TRUE,\n  pairwise.comparisons = TRUE,\n  pairwise.display = \"s\",\n  p.adjust.method = \"hom\"\n) + xlab('Flat Type') + ylab('Price Per Sqm. (SGD)')\n\nanova\n\n\n\n\nConsideration: violin plots are used to show the unit price distribution of different flat type; by the p-values on top of the graphs, we can see which pair of samples have a rejected null hypothesis in the ANOVA test.\nAnalytical insights: here are the findings from the visualization:\n\nwe can conclude that 5-ROOM flats has a statistically different median in unit price compare to 3 ROOM and 4 ROOM flats;\nwe cannot conclude any statistical difference between median in unit price of 3-ROOM and 4-ROOM flats.\n\n\n\n2.2.2. Boxplots of Resale Price by Flat Model\n\npp <- ggplot(resale_2022, aes(x=reorder(flat_model,resale_price,fun=median), y=resale_price, fill=flat_model))+\n  geom_boxplot()+\n  xlab('Flat Model Type')+\n  ylab('Price in SGD')+\n  theme(\n    legend.position = \"none\")\nfig4 <- ggplotly(pp) %>% \n  layout(\n    title=\"By Flat Model\",\n    xaxis=list(tickangle = 45)\n         )\nfig4\n\n\n\n\n\nConsideration: box plots are used to show the total resale price distribution of different flat model. The models are sorted by their median so that it is easier to observe which ones are more premium flat models.\nAnalytical insights: here are the findings from the visualization:\n\nType S1, S2 and Premium Apartment Loft are generally more expensive;\nNew Generation, Simplified and A2 Model are more affordable."
  },
  {
    "objectID": "takehome_3/takehome_3.html#ternary-diagram-percentage-of-affordable-medium-premium-flats-by-area",
    "href": "takehome_3/takehome_3.html#ternary-diagram-percentage-of-affordable-medium-premium-flats-by-area",
    "title": "Take-home Exercise 3",
    "section": "2.3. Ternary Diagram: Percentage of “Affordable”, “Medium”, “Premium” Flats by Area",
    "text": "2.3. Ternary Diagram: Percentage of “Affordable”, “Medium”, “Premium” Flats by Area\n\nresale_2022$tri_tile <- ntile(resale_2022$psqm, 3)\nresale_2022_perc_by_town <- resale_2022 %>%\n  group_by(town, tri_tile) %>%\n  summarise(No_sales=n()) %>%\n  mutate(freq = round(No_sales / sum(No_sales),2)) %>%\n  select(town, tri_tile, freq) %>%\n  pivot_wider(names_from = tri_tile, values_from = freq)\ncolnames(resale_2022_perc_by_town) <- c(\"town\" ,\"Affordable\", \"Medium\",\"Premium\")\nresale_2022_perc_by_town <- resale_2022_perc_by_town %>% mutate(Affordable=replace_na(Affordable,0))\nresale_2022_perc_by_town\n\n# A tibble: 26 × 4\n# Groups:   town [26]\n   town          Affordable Medium Premium\n   <chr>              <dbl>  <dbl>   <dbl>\n 1 ANG MO KIO          0.28   0.45    0.27\n 2 BEDOK               0.37   0.45    0.18\n 3 BISHAN              0.06   0.1     0.85\n 4 BUKIT BATOK         0.42   0.32    0.26\n 5 BUKIT MERAH         0.07   0.25    0.69\n 6 BUKIT PANJANG       0.47   0.37    0.15\n 7 BUKIT TIMAH         0      0.12    0.88\n 8 CENTRAL AREA        0      0.07    0.93\n 9 CHOA CHU KANG       0.54   0.36    0.11\n10 CLEMENTI            0.16   0.35    0.49\n# … with 16 more rows\n\n\n\nlabel <- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"black\"),\n    bordercolor = \"black\", borderwidth = 2\n  )\n}\n\naxis <- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes <- list(\n  aaxis = axis(\"Affordable\"), \n  baxis = axis(\"Medium\"), \n  caxis = axis(\"Premium\")\n)\n\nplot_ly(\n  resale_2022_perc_by_town,\n  # a b c are the 3 variables, text is the tooltip (town)\n  a = ~Affordable, \n  b = ~Medium, \n  c = ~Premium, \n  text = ~town,\n  color = I('#DB7365'), \n  type = \"scatterternary\",\n  marker = list(size = 8)\n) %>%\n  layout(\n    annotations = label(\"Ternary Diagram: Distribution of Unit <br> in Different Price Range by Town\"), \n    ternary = ternaryAxes,\n    margin = margin(.5,.5,.5,.5, \"cm\")\n  )\n\n\n\n\n\nConsideration: We divide all HDB flats in to 3-tile based on their resale price: “Affordable”, “Medium” and “Premium”, and we would like to see how each of the portion constitute to the total number of units in diferent towns. When the a data point is hovered upon, the town, and percentage of units in each price range will be displayed.\nAnalytical insights: here are the findings from the visualization:\n\nWe can found the data points tend to cluster around the “Affordable” angle and the “Premium” angle, which means that few towns are dominated by flats in medium price range.\nClose to the “Premium” angle are areas that are located near the downtown or central;\nClose to the “Affordable” angle are areas that are closer to the suburb."
  },
  {
    "objectID": "takehome_3/takehome_3.html#correlation-matrix-factors-that-affect-price",
    "href": "takehome_3/takehome_3.html#correlation-matrix-factors-that-affect-price",
    "title": "Take-home Exercise 3",
    "section": "2.4. Correlation Matrix: Factors that Affect Price",
    "text": "2.4. Correlation Matrix: Factors that Affect Price\n\nresale_cor <- cor(resale_2022[, c('resale_price', 'psqm', 'floor_area_sqm', 'remaining_lease_years')])\nresale_sig <-  cor.mtest(resale_cor, conf.level= .95)\ncorrplot(resale_cor,\n         method = \"number\",\n         type = \"lower\",\n         diag = TRUE,\n         tl.col = \"black\",\n         tl.srt = 45,\n         p.mat = resale_sig$p,\n         sig.level = .05)\n\n\n\n\nConsideration: We would like to compute the correlation between each of the numerical variable to discover how much they are correlated to each other.\nAnalytical insights: By plotting the correlation matrix between resale_price, floor_area_sqm, remaining_lease_years and psqm, we find that the correlations between unit price of resale flat and total price, floor area and remaining lease period are not statistically significant."
  },
  {
    "objectID": "takehome_3/takehome_3.html#heatmap-between-storey-and-price",
    "href": "takehome_3/takehome_3.html#heatmap-between-storey-and-price",
    "title": "Take-home Exercise 3",
    "section": "2.5. Heatmap: Between Storey and Price",
    "text": "2.5. Heatmap: Between Storey and Price\n\nresale_storey <- resale_2022 %>%\n  group_by(town, storey_range) %>%\n  summarise(med_price=median(resale_price)) %>%\n  ungroup() %>%\n  mutate(town = reorder(town, med_price))\n\n# Specify the number of colors in the color ramp\ncustom_colors <- colorRampPalette(c(\"blue\",\"red\"))(n = 20)\n\nhmp <- plot_ly(\n  data = resale_storey, \n  x = ~town ,\n  y = ~storey_range, \n  z = ~med_price, \n  type = \"heatmap\",\n  colorscale = list(\n    reverse = TRUE, \n    cmin = min(resale_storey$med_price), \n    cmax = max(resale_storey$med_price), \n    colors = custom_colors)\n) %>% layout(\n  xaxis = list(title = \"Town\"),\n  yaxis = list(title = \"Storey Range\"),\n  title = \"Resale Prices by Town and Storey Range\"\n)\n\nhmp\n\n\n\n\n\nConsideration: We would like to compute the correlation between each of the numerical variable to discover how much they are correlated to each other.\nAnalytical insights: By plotting the correlation matrix between resale_price, floor_area_sqm, remaining_lease_years and psqm, we find that the correlations between unit price of resale flat and total price, floor area and remaining lease period are not statistically significant."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Liang Minghao’s Visual Analytics Portfolio",
    "section": "",
    "text": "LinkedIn\n  \n  \n    \n     Github\n  \n\n      \nThis website shows the collection of my visual analytics exercises and projects. Hope you enjoy my works!\n\n\nSingapore Management University | Master of IT in Business (Analytics)\nJan 2022 - Apr 2023\nUniversity of Wollongong | Bachelor in Computer Science\nOct 2018 - Sep 2021\n\n\n\nUnited Parcel Service | Data Scientist Intern | May 2022 - Nov 2022"
  },
  {
    "objectID": "Gallery.html",
    "href": "Gallery.html",
    "title": "Gallery",
    "section": "",
    "text": "Hands-on Exercise 1: ggplot using R\n\n\n\n\n\nCreating 1st data visualisation using ggplot package in R.\n\n\n\n\n\n\nJan 13, 2023\n\n\nLiang Minghao\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 2\n\n\n\n\n\nCreating 1st data visualisation using ggplot package in R.\n\n\n\n\n\n\nInvalid Date\n\n\nLiang Minghao\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 3\n\n\n\n\n\nInteractive Data Visualisation with R.\n\n\n\n\n\n\nInvalid Date\n\n\nLiang Minghao\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 4\n\n\n\n\n\nFundamentals of Visual Analytics with R\n\n\n\n\n\n\nFeb 4, 2023\n\n\nLiang Minghao\n\n\n\n\n\n\n  \n\n\n\n\nIn-Class Exercise 1\n\n\n\n\n\nVisualization of Sales and Profit Summary of a store using Tableau Desktop.\n\n\n\n\n\n\nJan 14, 2023\n\n\nLiang Minghao\n\n\n\n\n\n\n  \n\n\n\n\nIn-Class Exercise 2\n\n\n\n\n\nExploring interactivity in visual analytics using Tableau Desktop.\n\n\n\n\n\n\nInvalid Date\n\n\nLiang Minghao\n\n\n\n\n\n\n  \n\n\n\n\nIn-Class Exercise 3\n\n\n\n\n\nExploring interactivity in visual analytics using R.\n\n\n\n\n\n\nJan 28, 2023\n\n\nLiang Minghao\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn-Class Exercise 4\n\n\n\n\n\nR: Fundamentals of Visual Analytics\n\n\n\n\n\n\nFeb 4, 2023\n\n\nLiang Minghao\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn-Class Exercise 5\n\n\n\n\n\nR: Visual Multivariate Analysis\n\n\n\n\n\n\nFeb 11, 2023\n\n\nLiang Minghao\n\n\n\n\n\n\n  \n\n\n\n\nLiang Minghao’s Visual Analytics Portfolio\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\nTake-Home Exercise 1\n\n\n\n\n\nReveal demographic structure of nine selected planning areas on a single view by using trellis display.\n\n\n\n\n\n\nJan 13, 2023\n\n\nLiang Minghao\n\n\n\n\n\n\n  \n\n\n\n\nTake-Home Exercise 2\n\n\n\n\n\nTake-home exercise 2 is a review of take-home exersise 1 of our peers; critics and adjustment is done using R graphical packages, based on some of the areas of improvement in the work.\n\n\n\n\n\n\nInvalid Date\n\n\nLiang Minghao\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTake-home Exercise 3\n\n\n\n\n\nThe focus of this exercise is to perform insightful data visualization to uncover the salient patterns of the resale prices of public housing property by residential towns and estates in Singapore.\n\n\n\n\n\n\nFeb 13, 2023\n\n\nLiang Minghao\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "inclass_3/inclass_3.html#installing-and-loading-r-packages",
    "href": "inclass_3/inclass_3.html#installing-and-loading-r-packages",
    "title": "In-Class Exercise 3",
    "section": "Installing and loading R packages",
    "text": "Installing and loading R packages\nTwo packages will be installed and loaded: tidyverse and ggiraph.\n\npacman::p_load(ggiraph,tidyverse)"
  },
  {
    "objectID": "inclass_3/inclass_3.html#importing-data",
    "href": "inclass_3/inclass_3.html#importing-data",
    "title": "In-Class Exercise 3",
    "section": "Importing data",
    "text": "Importing data\n\nexam_data <- read_csv('../Data/Exam_data.csv')\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "inclass_3/inclass_3.html#visualization",
    "href": "inclass_3/inclass_3.html#visualization",
    "title": "In-Class Exercise 3",
    "section": "Visualization",
    "text": "Visualization\n\nDotplot using ggplot2\n\nggplot(exam_data,\n       aes(x=MATHS)) +\n  geom_dotplot(dotsize = .5)\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\n\n\nInteractive dotplot using girafe\nNotice student id is shown when it is being hovered on.\n\nexam_data$tooltip <- c(paste0(\n  \"Name = \", exam_data$ID,\n  \"\\t Class = \", exam_data$CLASS,\n  \"\\t Grade = \", exam_data$MATHS))\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "inclass_4/inclass_4.html",
    "href": "inclass_4/inclass_4.html",
    "title": "In-Class Exercise 4",
    "section": "",
    "text": "pacman::p_load(plotly, DT, patchwork, ggstatsplot, tidyverse)\nexam_data <- read_csv('../Data/Exam_data.csv')"
  },
  {
    "objectID": "inclass_4/inclass_4.html#viz-using-plotly",
    "href": "inclass_4/inclass_4.html#viz-using-plotly",
    "title": "In-Class Exercise 4",
    "section": "1. Viz Using Plotly",
    "text": "1. Viz Using Plotly\n\nUsing Plotly API Directly\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\n\n\nUse ggplotly() Wrapper\ncreate normal ggplot() first, and use ggplotly() to wrap over the plot object.\n\np <- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size = 1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p) #<<"
  },
  {
    "objectID": "inclass_4/inclass_4.html#visual-statistical-analysis-with-ggstatsplot",
    "href": "inclass_4/inclass_4.html#visual-statistical-analysis-with-ggstatsplot",
    "title": "In-Class Exercise 4",
    "section": "2. Visual Statistical Analysis with ggstatsplot",
    "text": "2. Visual Statistical Analysis with ggstatsplot\n\nTwo-sample mean test: ggbetweenstats()\n\nggbetweenstats(\n  data = exam_data,\n  x = GENDER, \n  y = MATHS,\n  type = \"p\",\n  messages = FALSE\n)\n\n\n\n\n\n\nSignificant Test of Correlation: ggscatterstats()\n\nggscatterstats(\n  data = exam_data,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = TRUE, #marginal histogram\n  )"
  },
  {
    "objectID": "inclass_4/inclass_4.html#visualising-models",
    "href": "inclass_4/inclass_4.html#visualising-models",
    "title": "In-Class Exercise 4",
    "section": "3. Visualising Models",
    "text": "3. Visualising Models\n\npacman::p_load(readxl, performance, parameters, see, gtsummary)\n\n\ncar_resale <- read_xls('../Data/ToyotaCorolla.xls')\n\nLinear regression model\n\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\n#use gtsummary to show tabulated result of the variables\ntbl_regression(model)\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    Age_08_04\n-14\n-35, 7.1\n0.2\n    Mfg_Year\n1,315\n1,059, 1,571\n<0.001\n    KM\n-0.02\n-0.03, -0.02\n<0.001\n    Weight\n19\n17, 21\n<0.001\n    Guarantee_Period\n28\n3.8, 52\n0.023\n  \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\n\nVisualizing multi-collinearity\n\ncheck_c <- check_collinearity(model)\nplot(check_c)\n\n\n\n\nNew model, with the highly correlated variable taken out:\n\nmodel1 <- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\ncheck_n <- check_normality(model1)\nplot(check_n)\n\n\n\n\n\n\nComplete Dignostic of Model\n\ncheck_model(model1)\n\n\n\n\n\n\nVisualising Regression Parameters\n\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "inclass_4/inclass_4.html#visualising-uncertainty",
    "href": "inclass_4/inclass_4.html#visualising-uncertainty",
    "title": "In-Class Exercise 4",
    "section": "4. Visualising Uncertainty",
    "text": "4. Visualising Uncertainty\nCalculate no. of rows, mean and s.d., aggregated by RACE.\n\nmy_sum <- exam_data %>%\n  group_by(RACE) %>%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %>%\n  mutate(se=sd/sqrt(n-1))\nmy_sum\n\n# A tibble: 4 × 5\n  RACE        n  mean    sd    se\n  <chr>   <int> <dbl> <dbl> <dbl>\n1 Chinese   193  76.5  15.7  1.13\n2 Indian     12  60.7  23.4  7.04\n3 Malay     108  57.4  21.1  2.04\n4 Others      9  69.7  10.7  3.79\n\n\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha= 0.7) +\n  ggtitle(\"Standard error of mean \n          maths score by race\")"
  },
  {
    "objectID": "inclass_5/inclass_5.html",
    "href": "inclass_5/inclass_5.html",
    "title": "In-Class Exercise 5",
    "section": "",
    "text": "pacman::p_load(ggtern, plotly, tidyverse)\n\ndata <- read_csv('/Users/minghaooo/mtlmh34/ISSS608-VAA-mh/Data/respopagsex2000to2018_tidy.csv')\n\ndata\n\n# A tibble: 108,126 × 5\n   PA         SZ                     AG        Year Population\n   <chr>      <chr>                  <chr>    <dbl>      <dbl>\n 1 Ang Mo Kio Ang Mo Kio Town Centre AGE0-4    2011        290\n 2 Ang Mo Kio Ang Mo Kio Town Centre AGE0-4    2012        270\n 3 Ang Mo Kio Ang Mo Kio Town Centre AGE0-4    2013        260\n 4 Ang Mo Kio Ang Mo Kio Town Centre AGE0-4    2014        250\n 5 Ang Mo Kio Ang Mo Kio Town Centre AGE0-4    2015        260\n 6 Ang Mo Kio Ang Mo Kio Town Centre AGE0-4    2016        250\n 7 Ang Mo Kio Ang Mo Kio Town Centre AGE0-4    2017        200\n 8 Ang Mo Kio Ang Mo Kio Town Centre AGE0-4    2018        180\n 9 Ang Mo Kio Ang Mo Kio Town Centre AGE10-14  2011        290\n10 Ang Mo Kio Ang Mo Kio Town Centre AGE10-14  2012        290\n# … with 108,116 more rows\n\n\n\n\n\n\nagpop_mutated <- data %>%\n  mutate(`Year` = as.character(Year))%>%\n  spread(AG, Population) %>%\n  mutate(YOUNG = rowSums(.[4:8]))%>%\n  mutate(ACTIVE = rowSums(.[9:16]))  %>%\n  mutate(OLD = rowSums(.[17:21])) %>%\n  mutate(TOTAL = rowSums(.[22:24])) %>%\n  filter(Year == 2018)%>%\n  filter(TOTAL > 0)\nagpop_mutated\n\n# A tibble: 234 × 25\n   PA        SZ    Year  AGE0-…¹ AGE05…² AGE10…³ AGE15…⁴ AGE20…⁵ AGE25…⁶ AGE30…⁷\n   <chr>     <chr> <chr>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 Ang Mo K… Ang … 2018      180     270     320     300     260     300     270\n 2 Ang Mo K… Chen… 2018     1060    1080    1080    1260    1400    1880    1940\n 3 Ang Mo K… Chon… 2018      900     900    1030    1220    1380    1760    1830\n 4 Ang Mo K… Kebu… 2018      720     850    1010    1120    1230    1460    1330\n 5 Ang Mo K… Semb… 2018      220     310     380     500     550     500     300\n 6 Ang Mo K… Shan… 2018      550     630     670     780     950    1080     990\n 7 Ang Mo K… Tago… 2018      260     340     430     500     640     690     440\n 8 Ang Mo K… Town… 2018      830     930     930     860    1020    1400    1350\n 9 Ang Mo K… Yio … 2018      160     160     220     260     350     340     230\n10 Ang Mo K… Yio … 2018      810    1070    1300    1450    1500    1590    1390\n# … with 224 more rows, 15 more variables: `AGE35-39` <dbl>, `AGE40-44` <dbl>,\n#   `AGE45-49` <dbl>, `AGE50-54` <dbl>, `AGE55-59` <dbl>, `AGE60-64` <dbl>,\n#   `AGE65-69` <dbl>, `AGE70-74` <dbl>, `AGE75-79` <dbl>, `AGE80-84` <dbl>,\n#   AGE85over <dbl>, YOUNG <dbl>, ACTIVE <dbl>, OLD <dbl>, TOTAL <dbl>, and\n#   abbreviated variable names ¹​`AGE0-4`, ²​`AGE05-9`, ³​`AGE10-14`, ⁴​`AGE15-19`,\n#   ⁵​`AGE20-24`, ⁶​`AGE25-29`, ⁷​`AGE30-34`\n\n\n\nggtern(data=agpop_mutated,aes(x=YOUNG,y=ACTIVE, z=OLD)) + geom_point()\n\n\n\n\n\n\n\n\nggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point() +\n  labs(title=\"Population structure, 2015\") +\n  theme_rgbw()\n\n\n\n\n\n\n\n\nlabel <- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\naxis <- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes <- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\nplot_ly(\n  agpop_mutated,\n  # a b c are the 3 variables, text is the tooltip (sub-zone)\n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  text = ~SZ,\n  color = I('#DB7365'), \n  type = \"scatterternary\"\n) %>%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes\n  )"
  },
  {
    "objectID": "inclass_5/inclass_5.html#correlation-diagram",
    "href": "inclass_5/inclass_5.html#correlation-diagram",
    "title": "In-Class Exercise 5",
    "section": "Correlation Diagram",
    "text": "Correlation Diagram\n\nImport libraries and data\n\npacman::p_load(corrplot, tidyverse, ggstatsplot, GGally)\nwine <- read_csv(\"/Users/minghaooo/mtlmh34/ISSS608-VAA-mh/Data/wine_quality.csv\")\nwine\n\n# A tibble: 6,497 × 13\n   fixed…¹ volat…² citri…³ resid…⁴ chlor…⁵ free …⁶ total…⁷ density    pH sulph…⁸\n     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <dbl>   <dbl>\n 1     7.4    0.7     0        1.9   0.076      11      34   0.998  3.51    0.56\n 2     7.8    0.88    0        2.6   0.098      25      67   0.997  3.2     0.68\n 3     7.8    0.76    0.04     2.3   0.092      15      54   0.997  3.26    0.65\n 4    11.2    0.28    0.56     1.9   0.075      17      60   0.998  3.16    0.58\n 5     7.4    0.7     0        1.9   0.076      11      34   0.998  3.51    0.56\n 6     7.4    0.66    0        1.8   0.075      13      40   0.998  3.51    0.56\n 7     7.9    0.6     0.06     1.6   0.069      15      59   0.996  3.3     0.46\n 8     7.3    0.65    0        1.2   0.065      15      21   0.995  3.39    0.47\n 9     7.8    0.58    0.02     2     0.073       9      18   0.997  3.36    0.57\n10     7.5    0.5     0.36     6.1   0.071      17     102   0.998  3.35    0.8 \n# … with 6,487 more rows, 3 more variables: alcohol <dbl>, quality <dbl>,\n#   type <chr>, and abbreviated variable names ¹​`fixed acidity`,\n#   ²​`volatile acidity`, ³​`citric acid`, ⁴​`residual sugar`, ⁵​chlorides,\n#   ⁶​`free sulfur dioxide`, ⁷​`total sulfur dioxide`, ⁸​sulphates\n\n\n\n\nCorrelation Matrix\n\npairs(wine[,2:12])\n\n\n\n\n\n\nDrawing the lower corner\n\npairs(wine[,2:12], upper.panel = NULL)\n\n\n\n# Drawing upper corner\n# pairs(wine[,2:12], lower.panel = NULL)\n\n\n\nIncluding Coefficients\n\npanel.cor <- function(x, y, digits=2, prefix=\"\", cex.cor, ...) {\n  usr <- par(\"usr\")\n  on.exit(par(usr))\n  par(usr = c(0, 1, 0, 1))\n  r <- abs(cor(x, y, use=\"complete.obs\"))\n  txt <- format(c(r, 0.123456789), digits=digits)[1]\n  txt <- paste(prefix, txt, sep=\"\")\n  if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)\n  text(0.5, 0.5, txt, cex = cex.cor * (1 + r) / 2)\n}\n\npairs(wine[,2:12], \n      upper.panel = panel.cor)\n\n\n\n\n\n\nUsing corrplot\n\n# building correlation matrix\nwine.cor <- cor(wine[, 1:11])\n\ncorrplot.mixed(wine.cor, \n               #lower corner\n               lower = \"ellipse\", \n               #upper corner\n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"blue\")\n\n\n\n\n\n\nFind highly correlated group\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         tl.pos = \"lt\",\n         tl.col = \"black\",\n         order=\"hclust\",\n         hclust.method = \"ward.D\",\n         addrect = 3)\n\n\n\n\n\n\nWith Significant Test\n\n# sig. test\nwine.sig = cor.mtest(wine.cor, conf.level= .95)\n\n#\ncorrplot(wine.cor,\n         method = \"number\",\n         type = \"lower\",\n         diag = FALSE,\n         tl.col = \"black\",\n         tl.srt = 45,\n         p.mat = wine.sig$p,\n         sig.level = .05)"
  },
  {
    "objectID": "inclass_2/inclass_2.html",
    "href": "inclass_2/inclass_2.html",
    "title": "In-Class Exercise 2",
    "section": "",
    "text": "1. Exploring interactivity features\nThe outcomes of the exercise are shown as a dashboard on Tableau Public.\n\n#2. Scatterplot with marginal plot\nLink ."
  },
  {
    "objectID": "handson_3/hands_on3.html",
    "href": "handson_3/hands_on3.html",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "pacman::p_load(ggiraph, plotly, gganimate, DT, tidyverse, patchwork)\n\n\n\n\n\nexam_data <- read.csv('/Users/minghaooo/Documents/Term 4/ISSS608-Visual Analytics/inclass-1/Exam_data.csv')\n\n\n\n\nThe default tootip shows student ID when hovering.\n\n#interactive graph object\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL) +\n  ggtitle('Basic dotplot of students')\n\n# create container\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n\nExtra information of class name is also added in.\n\n# create new field, concatenate ID and Class\nexam_data$tooltip <- c(paste0(     #<<\n  \"Name = \", exam_data$ID,         #<<\n  \"\\n Class = \", exam_data$CLASS)) #<<\n\n# Customized CSS style\ntooltip_css <- \"background-color:white; #<<\nfont-style:bold; color:black;\" #<<\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), #<<\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL) +\n  ggtitle('Shows student number and class name')\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618,\n  options = list(    #<<\n    opts_tooltip(    #<<\n      css = tooltip_css)\n    ) #<<\n)\n\nWarning: Use of `exam_data$tooltip` is discouraged.\nℹ Use `tooltip` instead.\n\n\n\n\n\n\n\n\n\nShows mean with standard error of mean (SEM).\n\ntooltip <- function(y, ymax, accuracy = .01) {   #<<\n  mean <- scales::number(y, accuracy = accuracy) #<<\n  sem <- scales::number(ymax - y, accuracy = accuracy) #<<\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem) #<<\n} #<<\n\ngg_point <- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  ggtitle('Boxplots with mean and SEM') +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  #<<\n                     tooltip(y, ymax))),  #<<\n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  #<<\n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(tooltip = tooltip, data_id = CLASS),             #<<\n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL) +\n  ggtitle('Highlighting students from the same class')\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)"
  },
  {
    "objectID": "handson_4/handson_4.html",
    "href": "handson_4/handson_4.html",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "pacman::p_load(ggstatsplot, tidyverse)\nexam <- read_csv('/Users/minghaooo/mtlmh34/ISSS608-VAA-mh/Data/Exam_data.csv')\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "handson_4/handson_4.html#one-sample-test",
    "href": "handson_4/handson_4.html#one-sample-test",
    "title": "Hands-on Exercise 4",
    "section": "One Sample Test",
    "text": "One Sample Test\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)"
  },
  {
    "objectID": "handson_4/handson_4.html#two-sample-mean-test",
    "href": "handson_4/handson_4.html#two-sample-mean-test",
    "title": "Hands-on Exercise 4",
    "section": "Two Sample Mean Test",
    "text": "Two Sample Mean Test\n\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "handson_4/handson_4.html#one-way-anova-test",
    "href": "handson_4/handson_4.html#one-way-anova-test",
    "title": "Hands-on Exercise 4",
    "section": "One-way ANOVA Test",
    "text": "One-way ANOVA Test\n\nlibrary(ggstatsplot)\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "handson_2/hands_on2.html",
    "href": "handson_2/hands_on2.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "1+1\n\n[1] 2"
  },
  {
    "objectID": "takehome_1/takehome_1.html",
    "href": "takehome_1/takehome_1.html",
    "title": "Take-Home Exercise 1",
    "section": "",
    "text": "1. Overview\nIn this exercise, the demographic structure of Singapore at planning area level will be revealed using age-sex pyramid method; data of nine selected planning areas will be presented on a single view by using trellis display.\nThe data used in this exercise is from SingStat, and read into Tableau Desktop 2022.4 for data visualization.\nThe data contains 7 columns:\n\n\n\nData Dictionary\n\n\ncolumns\ninterpretation\n\n\n\n\nPA\nPlanning Zone\n\n\nSZ\nSubzone\n\n\nAG\nAge Group\n\n\nSex\nSex\n\n\nFA\nFloor Area of Residence\n\n\nPop\nPopulation\n\n\nTime\nTime period\n\n\n\n\n\n\n\n2. Choosing The 9 Planning Areas\nThe following nine planning area are chosen: Tempines, Seng Kang, Ang Mo Kio, Woodlands, Chua Chu Kang, Jurong West, Toa Payoh, Queenstown, Bukit Timah.\nJustification/Reasons to choose these areas: these planning areas are top 2 or 3 in population within their own regions, which means the population size is sufficient for us to visualize the demographic structure, compared to those areas with a smaller population.\n\n\n3. Visualization on Tableau\nThe outcome of visualization can be viewed on Minghao’s Tableau Public.\n\n\n\n\nThe Final Age Pyramid Trellis Charts of 9 Residential Area\n\n\n\n\n\n4. Insights and Observations\n\nAs a general trend, the visualization indicates that age pyramids of 9 planning areas in Singapore tend to be constrictive, meaning that the bottom part (i.e., children and youths) is narrow and has a smaller population, whereas the middle-top (i.e., mid-age/elderly) part is huge in population. This shows Singapore has entered into an aging society.\nSengkang, as one of the more newly established estate areas, have the youngest demographic structure among all selected areas, as it is shown that the age pyramid peaks at 35-39 (for female) and 40-44 (for male); the bottom part of age pyramid of Sengkang is also the widest among all, representing a more significant number of young people in the area.\nFor earlier established areas such as Ang Mo Kio, Choa Chu Kang, Tampines and Woodlands, the age pyramids tilt towards the top to a large extent, indicating a more aging community within the areas.\nGovernment should pay more attention to these areas and implement more elderly-oriented facilities, such that the needs of aged people can be taken care of.\n\n\n\n5. Step-by-Step Procedures\n\n5.1 Data Preparation\n\n\n\n\n\n\n\n\nNo.\nSteps\nAction\n\n\n\n\n1\nLoad the required data “residents_by_area.csv”\n\n\n\n2\nPress the “+” button, select “Add clean step”\n\n\n\n3\nSelect “Filter - Selected values”\n\n\n\n4\nSelect the 9 destinated planning areas\n\n\n\n5\nRemove Column Time, as all rows are from year 2022, hence the column is redundant\n\n\n\n6\nOutput the prepared data as .csv file\n\n\n\n\n\n\n5.2 Data Visualization\n\n\n\n\n\n\n\n\nNo.\nSteps\nAction\n\n\n\n\n1\nCreate new calculation field “Col” using the following formula (To assign column index)\n\n\n\n2\nCreate new calculation field “Rows” using the following formula (To assign row index)\n\n\n\n3\nCreate new variable “Males Pop” so that only male population is displayed\n\n\n\n4\nCreate new variable “Females Pop” so that only female population is displayed\n\n\n\n5\nDrag “Females Pop” and “Males Pop” onto Column Page, and drag “AG” to Rows Page. Right click horizontal axis, select “edit axis” and check “Reversed” field.\n\n\n\n6\nDrag “Col” onto Column Page and drag “Rows” to Rows Page; Drag “PA” to Detail Mark\n\n\n\n7\nFor “Col” and “Rows” fields, select Compute Using - PA\n\n\n\n8\nUnder Marks - All, select min/max Label for SUM(Females Pop) and SUM(Males Pop); uncheck “Label minimum value” to display the maximum values only\n\n\n\n9\nRename the worksheet and save."
  }
]